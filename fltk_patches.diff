--- a/FL/Fl_Help_Dialog.H
+++ b/FL/Fl_Help_Dialog.H
@@ -43,8 +43,9 @@ class FL_EXPORT Fl_Help_Dialog {
   int find_pos_; 
 public:
   Fl_Help_Dialog();
-private:
+protected:
   Fl_Double_Window *window_;
+private:
   Fl_Button *back_;
   inline void cb_back__i(Fl_Button*, void*);
   static void cb_back_(Fl_Button*, void*);
@@ -63,6 +64,8 @@ private:
   Fl_Help_View *view_;
   inline void cb_view__i(Fl_Help_View*, void*);
   static void cb_view_(Fl_Help_View*, void*);
+  Fl_Button *close_;
+  static void cb_close_(Fl_Button*, void*);
 public:
   ~Fl_Help_Dialog();
   int h();
--- a/src/Fl_Choice.cxx
+++ b/src/Fl_Choice.cxx
@@ -187,14 +187,14 @@ int Fl_Choice::handle(int e) {
   J1:
     if (Fl::scheme()
 	|| fl_contrast(textcolor(), FL_BACKGROUND2_COLOR) != textcolor()) {
-      v = menu()->pulldown(x(), y(), w(), h(), mvalue(), this);
+      v = menu()->pulldown(x(), y(), w(), h(), 0, this);
       if (wp.deleted()) return 1;
     } else {
       // In order to preserve the old look-n-feel of "white" menus,
       // temporarily override the color() of this widget...
       Fl_Color c = color();
       color(FL_BACKGROUND2_COLOR);
-      v = menu()->pulldown(x(), y(), w(), h(), mvalue(), this);
+      v = menu()->pulldown(x(), y(), w(), h(), 0, this);
       if (wp.deleted()) return 1;
       color(c);
     }
--- a/src/Fl_Color_Chooser.cxx
+++ b/src/Fl_Color_Chooser.cxx
@@ -571,7 +571,7 @@ Fl_Color_Chooser::Fl_Color_Chooser(int X, int Y, int W, int H, const char* L)
   bvalue.callback(rgb_cb);
   choice.callback(mode_cb);
   choice.box(FL_THIN_UP_BOX);
-  choice.textfont(FL_HELVETICA_BOLD_ITALIC);
+  choice.textfont(FL_HELVETICA);
 }
 
 ////////////////////////////////////////////////////////////////
--- a/src/Fl_Help_Dialog.cxx
+++ b/src/Fl_Help_Dialog.cxx
@@ -144,6 +144,9 @@ void Fl_Help_Dialog::cb_view__i(Fl_Help_View*, void*) {
 void Fl_Help_Dialog::cb_view_(Fl_Help_View* o, void* v) {
   ((Fl_Help_Dialog*)(o->parent()->user_data()))->cb_view__i(o,v);
 }
+void Fl_Help_Dialog::cb_close_(Fl_Button* o, void* v) {
+  ((Fl_Help_Dialog*)(o->parent()->parent()->user_data()))->hide();
+}
 
 Fl_Help_Dialog::Fl_Help_Dialog() {
   { window_ = new Fl_Double_Window(530, 385, "Help Dialog");
@@ -173,10 +176,10 @@ Fl_Help_Dialog::Fl_Help_Dialog() {
         larger_->labelsize(16);
         larger_->callback((Fl_Callback*)cb_larger_);
       } // Fl_Button* larger_
-      { Fl_Group* o = new Fl_Group(350, 10, 171, 25);
+      { Fl_Group* o = new Fl_Group(350, 10, 141, 25);
         o->box(FL_DOWN_BOX);
         o->color(FL_BACKGROUND2_COLOR);
-        { find_ = new Fl_Input(375, 12, 143, 21, "@search");
+        { find_ = new Fl_Input(375, 12, 113, 21, "@search");
           find_->tooltip("find text in document");
           find_->box(FL_FLAT_BOX);
           find_->labelsize(13);
@@ -186,6 +189,12 @@ Fl_Help_Dialog::Fl_Help_Dialog() {
         } // Fl_Input* find_
         o->end();
       } // Fl_Group* o
+      { close_ = new Fl_Button(495, 10, 25, 25, "X");
+        close_->tooltip("Close the window.");
+        close_->labelfont(1);
+        close_->labelsize(16);
+        close_->callback((Fl_Callback*)cb_close_);
+      } // Fl_Button* close_
       { Fl_Box* o = new Fl_Box(150, 10, 190, 25);
         Fl_Group::current()->resizable(o);
       } // Fl_Box* o
--- a/src/Fl_Native_File_Chooser_GTK.cxx
+++ b/src/Fl_Native_File_Chooser_GTK.cxx
@@ -98,6 +98,7 @@ typedef void  (*GClosureNotify)(gpointer data, GClosure	*closure);
 
 class FL_EXPORT Fl_GTK_Native_File_Chooser_Driver : public Fl_Native_File_Chooser_FLTK_Driver {
   friend class Fl_Native_File_Chooser;
+  friend class My_GTK_File_Chooser;
 private:
   static int have_looked_for_GTK_libs;
   typedef struct _GtkWidget GtkWidget;
